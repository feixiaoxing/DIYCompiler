options {
    STATIC = false;
}
 
PARSER_BEGIN(Parse)
import java.io.*;
public class Parse {
    public static void main(String[] args) {
        for (String arg : args) {
            try {
                evaluate(arg);
            } catch (ParseException ex) {
                System.err.println(ex.getMessage());
            }
        }
    }
 
    public static long evaluate(String src) throws ParseException {
        Reader reader = new StringReader(src);
        new Parse(reader).expr();
		return 0;
    }
}
PARSER_END(Parse)
 
SKIP: { <[" ", "\t", "\r", "\n"]> }
TOKEN: { <INTEGER: (["0"-"9"])+> }
TOKEN: {<IF : "if">}
TOKEN: {<ELSE : "else">}
TOKEN: {<FOR : "for">}
TOKEN: {<WHILE : "while">}
TOKEN: {<DO : "do">}
TOKEN: {<SWITCH : "switch">}
TOKEN: {<CASE : "case">}
TOKEN: {<GOTO : "goto">}
TOKEN: {<INT : "int">}
TOKEN: {<SHORT : "short">}
TOKEN: {<FLOAT : "float">}
TOKEN: {<DOUBLE : "double">}
 
long expr() throws NumberFormatException :
{
    Token a ;
    Token b ;
    int value = 0 ;
}
{
	(<IF> 
	{
		System.out.println("Find if keyword!!!");
	}|
	<ELSE> 
	{
		System.out.println("Find else keyword!!!");
	}|
	<FOR> 
	{
		System.out.println("Find for keyword!!!");
	}|
	<WHILE> 
	{
		System.out.println("Find while keyword!!!");
	}
	)
    <EOF>
    { return value ; }
}